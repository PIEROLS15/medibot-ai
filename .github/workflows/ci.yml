name: CI for Recommendation System

on:
  push:
    branches: 
    - main
  pull_request:
    branches: 
    - main

jobs:
  lint_build:
    name: Lint & Build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: recommendation_sytem_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/recommendation_sytem_test"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Cypress
        run: npm run cypress:run

  # e2e_cypress:
  #   name: Cypress E2E
  #   needs: lint_build
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 20

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup Node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         cache: "npm"

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Download build artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: next-build
  #         path: .next

  #     - name: Run Cypress tests
  #       uses: cypress-io/github-action@v6
  #       with:
  #         install: false
  #         start: npm run start
  #         wait-on: "http://localhost:3000"
  #         wait-on-timeout: 120
  #         command: npm run cypress:run
  #       env:
  #         NODE_ENV: production
  #         DATABASE_URL: ${{ secrets.DATABASE_URL }}
  #         # (Opcional si usas NextAuth u otras envs en runtime)
  #         # NEXTAUTH_URL: http://localhost:3000
  #         # NEXTAUTH_SECRET: dummysecret

  #     - name: Save Cypress videos & screenshots (on failure)
  #       if: failure()
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: cypress-artifacts
  #         path: |
  #           cypress/videos
  #           cypress/screenshots
  #         if-no-files-found: ignore
